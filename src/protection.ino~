 #include "SparkFun_ADXL345ST.h"         // SparkFun ADXL345 Library

//********** ADXL345 COMMUNICATION ***********
ADXL345 adxl = ADXL345();             // USE FOR ACCEL COMMUNICATION in I2C mode

void setup_adxl345()
{
  /////////////
  // Setup ADXL345
  debug("ADXL345 Setup");
  debug("\n");
  // // *Temp Debug* Set the pin mode to output, so you may control it.
  // pinMode(ledPin, OUTPUT);
  // Power on the ADXL345
  adxl.powerOn();

  // Configure Chip
  adxl.setRangeSetting(4);            // Give the range settings
  // Accepted values are 2g, 4g, 8g or 16g
  // Higher Values = Wider Measurement Range
  // Lower Values = Greater Sensitivity

  // No TAP or Freefall detection only Activity
  adxl.setActivityXYZ(1, 1, 1);       // Set to activate movement detection in the axes "adxl.setActivityXYZ(X, Y, Z);" (1 == ON, 0 == OFF)
  adxl.setActivityThreshold(state.ActivityThreshold);      // 62.5mg per increment   // Set activity   // Inactivity thresholds (0-255) 36,72,100 or 144

  adxl.setInactivityXYZ(1, 1, 1);     // Set to detect inactivity in all the axes "adxl.setInactivityXYZ(X, Y, Z);" (1 == ON, 0 == OFF)
  adxl.setInactivityThreshold(state.ActivityThreshold);    // 62.5mg per increment   // Set inactivity // Inactivity thresholds (0-255)
  adxl.setTimeInactivity(10);         // How many seconds of no activity is inactive?

  // Setting all interupts to take place on INT1 pin
  adxl.setImportantInterruptMapping(0, 0, 0, 1, 1);     // Sets "adxl.setEveryInterruptMapping(single tap, double tap, free fall, activity, inactivity);" 
  // Accepts only 1 or 2 values for pins INT1 and INT2. This chooses the pin on the ADXL345 to use for Interrupts.

  // Turn on Interrupts for Activity(1 == ON, 0 == OFF)
  // These are both set on to start and then toggled
  adxl.InactivityINT(1);
  adxl.ActivityINT(1);

  // Need to set int1 pin as an input before calling atttachInterrupt
  pinMode(interruptPin,INPUT);
  attachInterrupt(interruptPin, ADXL_ISR, CHANGE);

  delay(300);  
}

setup_protection()
{
  setup_adxl345();
}
